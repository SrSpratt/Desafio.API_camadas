@using Desafio.Consumer.Models.Dtos
@model IEnumerable<Desafio.Consumer.Models.Dtos.Product>

@{
    List<Category> categories = new List<Category>();
    foreach (Product item in Model)
    {
        bool isDuplicate = categories.Any(duplicate => duplicate.Name == item.Category);
        if (!isDuplicate)
            categories.Add(new Category(item.Category));
    }
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/JavaScript.js"></script>
<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-custom">Create New</a>
</p>

<p>
    @using (Html.BeginForm ("Index", "Home", FormMethod.Get))
    {
        <b>Search By: </b>
        <div class="searchSpace d-flex">
            <form asp-action="Index">
                <select id="SelectProduct" name="name" asp-items="@(new SelectList(categories, "Name","Name" ))">
                    <option>  Category </option>
                </select>
            </form>
            <form asp-action="Index">
                <input type="text" id="SearchProduct" placeholder="Name" />
            </form>
        </div>

    }
</p>

<div id="partialList">
    <partial name="_ShowListPartial" model="@Model" />
</div>
@{
    string url = Url.Action("ShowName", "Product");
    string secondurl = Url.Action("ExhibitName", "Product");
    <script>
        vanilla_fire_ajax("SelectProduct", "@url", "partialList");
        vanilla_fire_ajax_search("SearchProduct", "@secondurl", "partialList");
    </script>

}


